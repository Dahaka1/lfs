"""empty message

Revision ID: 338cd82a95f9
Revises: f653b2095f8a
Create Date: 2023-08-25 22:18:29.895075

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '338cd82a95f9'
down_revision = 'f653b2095f8a'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users_stations',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('station_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['station_id'], ['station.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'station_id'),
    sa.UniqueConstraint('station_id')
    )
    op.drop_table('registration_code')
    op.add_column('station', sa.Column('serial', sa.String(), nullable=True))
    op.add_column('station', sa.Column('name', sa.String(), nullable=True))
    op.add_column('station', sa.Column('comment', sa.String(), nullable=True))
    op.create_unique_constraint(None, 'station', ['serial'])
    op.drop_column('station', 'location')
    op.add_column('station_control', sa.Column('washing_machines_queue', sa.JSON(), nullable=True))
    op.create_unique_constraint(None, 'station_control', ['station_id'])
    op.create_unique_constraint(None, 'station_settings', ['station_id'])
    op.drop_column('users', 'email_confirmed')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('email_confirmed', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'station_settings', type_='unique')
    op.drop_constraint(None, 'station_control', type_='unique')
    op.drop_column('station_control', 'washing_machines_queue')
    op.add_column('station', sa.Column('location', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'station', type_='unique')
    op.drop_column('station', 'comment')
    op.drop_column('station', 'name')
    op.drop_column('station', 'serial')
    op.create_table('registration_code',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sended_to', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sended_from', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hashed_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sended_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('is_confirmed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('confirmed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='registration_code_user_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'sended_at', name='registration_code_pkey')
    )
    op.drop_table('users_stations')
    # ### end Alembic commands ###
